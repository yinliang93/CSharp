using System;
using System.Windows.Forms;
//----------------主窗体代码-------------------
namespace _5.C_基础知识_delegate的应用_主从窗体的通信 {
    // 1. 声明一个委托,委托要声明在程序的外部
    public delegate void SendMessages(string count);

    public partial class 主窗体 : Form {
        public 主窗体() {
            InitializeComponent();

            // 4. 创建副窗体,并关联主窗体的方法
            副窗体 frm = new 副窗体();
            frm.messages = Recevice;
            frm.Show();
        }
        private void 主窗体_Load(object sender, EventArgs e) {

        }

        /// <summary>
        /// 2. 根据委托定义方法,接收委托消息
        /// </summary>
        /// <param name="count"></param>
        private void Recevice(string count) {
            label2.Text = count;
        }
    }
}
//----------------副窗体代码-------------------
using System;
using System.Windows.Forms;

namespace _5.C_基础知识_delegate的应用_主从窗体的通信 {
    public partial class 副窗体 : Form {
        public 副窗体() {
            InitializeComponent();
        }
        // 3.声明委托对象,并传递委托参数
        public SendMessages messages;
        private int count =0;

        private void button1_Click(object sender, EventArgs e) {       
            count++;
            if (messages != null) {
                messages(count.ToString());
            }
        }
    }
}
